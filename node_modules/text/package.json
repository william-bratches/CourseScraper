{
  "name": "text",
  "description": "A collection of utilities for manipulating text.",
  "version": "0.1.0",
  "author": {
    "name": "Ben Weaver",
    "email": "ben@orangesoda.net"
  },
  "contributors": [],
  "dependencies": {},
  "keywords": [
    "text",
    "encoding",
    "base64",
    "string"
  ],
  "directories": {
    "lib": "./lib/text"
  },
  "scripts": {},
  "bin": {},
  "engines": {
    "node": ">= 0.1.103"
  },
  "readme": "# Node Text #\n\nThis package is a collection of utilities for manipulating text.\n\n## Installation ##\n\nUse `npm install text` or add `text` to a folder in your `NODE_PATH`.\n\n## API ##\n\n### Encoding ###\n\n#### encode64(str) ####\n\nReturn `str` encoded using a standard base64 alphabet.\n\n#### decode64(str) ####\n\nReturn the standard base64 decoding of `str`.\n\n#### urlsafeEncode64(str) ####\n\nLike `encode64`, but uses `-_` instead of `+/` to make the result\nurl-safe.\n\n#### urlsafeDecode64(str) ####\n\nLike `decode64`, but assumes the encoding uses `-_` instead of `+/`.\n\n### Manipulation ###\n\n### splitLines(str) ###\n\nReturn an array of lines in `str` without trailing line delimitors.\n\n#### wrap(str, [soft=70, hard]) ####\n\nBreak `str` into segments along word boundaries.  Return the segments\nin an array.  Usually, each segment is no longer than `soft`\ncharacters.  If there are no word breaks and `hard` is set, the long\nword will be split into segments that are no longer than `hard`\ncharacters.  If `hard` is not set, long words are not broken.\n\n#### fill(str, [soft=70, hard, glue]) ####\n\nThis is a shortcut for `wrap(str, soft, hard).join(glue)`.  By\ndefault, `glue` is a newline.\n\n#### atMost(str, [soft=70, hard, pattern=\"\\\\s\"]) ####\n\nReturn the largest substring of `str` terminated by `pattern` that's\nno longer than `soft` characters.  By default, `pattern` is any space\ncharacter.  If a `hard` limit is given, the result will be no longer\nthan `hard` characters, even if `pattern` isn't found.\n\n## Compatibility ##\n\nNode Text has been tested with Node.JS version `0.1.103`.\n\n## License ##\n\nCopyright (c) 2010, Ben Weaver &lt;ben@orangesoda.net&gt;\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n* Redistributions of source code must retain the above copyright\n  notice, this list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright\n  notice, this list of conditions and the following disclaimer in the\n  documentation and/or other materials provided with the distribution.\n\n* Neither the name of the <organization> nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT\nHOLDER> BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\nEXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\nPROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\nPROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\nLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\nNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n",
  "readmeFilename": "README.md",
  "_id": "text@0.1.0",
  "_shasum": "87f82a2e98eb5250ce0c397d46bfa34e299d1d63",
  "_from": "text@",
  "_resolved": "https://registry.npmjs.org/text/-/text-0.1.0.tgz"
}
